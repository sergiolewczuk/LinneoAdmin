/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Pantallas.InternalFrames;

import Clases.Alumnos;
import Dialogs.ModificarBecaCurso;
import Dialogs.ModificarCurso;
import Pantallas.Frames.Principal;
import static Pantallas.Frames.Principal.df;
import static Pantallas.Frames.Principal.jDesktopPane1;
import java.awt.KeyEventDispatcher;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.beans.PropertyVetoException;
import java.math.BigDecimal;
import java.security.MessageDigest;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Box;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Sergio
 */
public class ABMAlumnos extends javax.swing.JInternalFrame {

    Clases.Alumnos alumnos = new Clases.Alumnos();
    Integer row = null;

    @Override
    public void dispose() {
        manager.removeKeyEventDispatcher(key);
        super.dispose();
    }
    
    JFrame jframe;
    KeyboardFocusManager manager = KeyboardFocusManager.getCurrentKeyboardFocusManager();
    KeyDispatcher key = new KeyDispatcher();
    
    
    //TECLADO ACCESOS DIRECTOS
    class KeyDispatcher implements KeyEventDispatcher {

        @Override
        public boolean dispatchKeyEvent(KeyEvent e) {
            if (jframe.isActive()) {
                if (e.getID() == KeyEvent.KEY_PRESSED) {
                    if (e.getKeyCode() == 112) {
                        
                    }
                    if (e.getKeyCode() == 113) {
                        jButton1.doClick();
                    }
                    if (e.getKeyCode() == 114) {
                        jButton2.doClick();
                    }
                    if (e.getKeyCode() == 115) {
                        jButton4.doClick();
                    }
                    if (e.getKeyCode() == 116) {
                        jButton5.doClick();
                    }
                }
            }
            return false;
        }
    }
    
    public String encriptarMD5(String palabra) {
        String pe = "";
        try {
            pe = hash(palabra);
        } catch (Exception e) {
            throw new Error("Error: Al encriptar el password");
        }
        return pe;
    }
    
    private String hash(String clear) throws Exception {
        MessageDigest md = MessageDigest.getInstance("MD5");
        byte[] b = md.digest(clear.getBytes());
        int size = b.length;
        StringBuffer h = new StringBuffer(size);
        for (int i = 0; i < size; i++) {
            int u = b[i] & 255;
            if (u < 16) {
                h.append("0" + Integer.toHexString(u));
            } else {
                h.append(Integer.toHexString(u));
            }
        }
        return h.toString();
    }

    public ABMAlumnos() {
        initComponents();

        alumnos.Cargar();
        
        Clases.Class_editar_tabla.main(jTable1, alumnos.datos);

        ListSelectionModel cellSelectionModel = jTable1.getSelectionModel();
        cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        
        //Hijack the keyboard manager
        manager.addKeyEventDispatcher(key);
        
        jframe = (JFrame) Principal.jDesktopPane1.getTopLevelAncestor();
        
        if (!(Pantallas.Frames.Principal.tipo).equals("Contador")) {
            jButton5.setVisible(false);
        }
        
        jButton3.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setIconifiable(true);
        setTitle("Ver Alumnos");

        jLabel1.setText("FILTRAR APELLIDO O NOMBRE");

        jTextField1.setName("string"); // NOI18N
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CODIGO", "DNI", "APELLIDO Y NOMBRE", "DOMICILIO", "TELEFONO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setName("tabla1"); // NOI18N
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jTable1MouseDragged(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(75);
        }

        jButton1.setText("F2 - MODIFICAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("F3 - INSCRIBIR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("F4 - INFO. CURSO");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("F4 - MODIFICAR BECA");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("F5 - MODIFICAR CURSO");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1033, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(5, 5, 5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // TODO add your handling code here:
        alumnos.FiltrarXApeNom(jTextField1.getText());
        
        Clases.Class_editar_tabla.main(jTable1, alumnos.datos);
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (jTable1.getSelectedRow() != -1) {
            if (jDesktopPane1.getAllFrames().length != 0) {
                JInternalFrame frame = jDesktopPane1.getAllFrames()[0];
                frame.dispose();
            }

            String cod = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();

            ModAlumno frame = new ModAlumno(cod);
            frame.setVisible(true);
            jDesktopPane1.add(frame);
            try {
                frame.setMaximum(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(jTable1.getSelectedRow() != -1 ){
            
            String cod = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
            // PRIMERO PREGUNTAR SI DEBE O NO
            
            BigDecimal info = Alumnos.AlumnoDeudor(cod);
            Boolean permitir_inscripcion = true;
            
            if (info.compareTo(BigDecimal.ZERO) != 0) {
                JPasswordField pf = new JPasswordField();
                
                Object[] message = {
                    "<html><div style='width:300px;'><center><u><b>OPERACION</b></u></center><div></br></br></html>\n\n"
                    + "<html><u><b>Apellido y Nombre</b></u>: " + jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString() + ".</html>\n"
                    + "<html><u><b>Total Deuda</b></u>: " + info + ".</html>\n"
                    + "<html>Para continuar con la inscripción, se solicita autorización por parte de Administración.</html>\n\n",
                    "Password:", pf
                };
                
                int respuesta = JOptionPane.showConfirmDialog(null, message, "Inscribir", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
                
                // SI RESPUESTA ES = A LA CONTRASEÑA DE VIRGINIA
                if (respuesta == JOptionPane.OK_OPTION) {
                    String password = pf.getText();
                    String usuario = "Virginia";
                    String passEncriptada = encriptarMD5(password);
                    int[] var = Clases.Usuarios.getUsuario(usuario, passEncriptada);
                    if (var[0] == 1) {
                        permitir_inscripcion = true;
                    } else {
                        JOptionPane.showMessageDialog(this, "Contraseña Incorrecta", "LinneoAdmin", JOptionPane.INFORMATION_MESSAGE);
                        permitir_inscripcion = false;
                        return;
                    }
                } else {
                    return;
                }
            }
            
            if (permitir_inscripcion) {
                // DEPENDIENDO DE QUE CURSO ESTÁ INSCRIPTO, PERMITIR EL SIGUIENTE O NO DEJARLE HASTA APROBAR ESE CURSO PARA PODER INSCRIBIRSE DE NUEVO
                String detalle_dialog = null;
                Object[] opciones_dialog = null;
                String cant_cursos = null;
                Boolean permitir = true;
                String bloquear_inscribir_en = null;
                
                String tipos_cursos = null;

                String[] cursos = Alumnos.MostrarInscripcion(cod);

                if (cursos != null) {
                    // SI EL ALUMNO ESTÁ INSCRITO SOLO A CURSADO, PERMITIRLE LENGUAS O VICEVERSA
                    // HACER UN FOR CON CURSOS INSCRIPTOS
                    // CARGAR EN UNA VARIABLE TODOS LOS CURSOS INSCRIPTOS, Y SI EL ARRAY ES MAYOR A 1 BLOQUEAR INSCRIPCION POR COMPLETO

                    cant_cursos = cursos[1];

                    if (cursos[2].contains("-")) {
                        permitir = false;
                    }
                    
                    if (permitir) {

                        // SPLIT A CURSOS[2] Y SABER LOS TIPOS DE CURSOS INSCRIPTOS
                        tipos_cursos = cursos[2];

                        if (tipos_cursos.equals("Cursado")) {

                            detalle_dialog = "<html><div style='width:300px;'><center><u><b>OPERACION</b></u></center><div></html>\n\n"
                                    + "<html><u><b>Apellido y Nombre</b></u>: " + jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString() + ".</html>\n"
                                    + "<html><u><b>Cursos Inscriptos</b></u>: " + cant_cursos + ".</html>\n"
                                    + "<html><b>Mientras el Alumno esté cursando algo, no se puede Inscribir a otro cursado. Cualquier duda, consultar con <u>administración</u>.</b></html>\n"
                                    + "¿Desea Inscribir al Taller de Lenguas?";

                            opciones_dialog = new Object[2];
                            opciones_dialog[0] = "Cancelar";
                            opciones_dialog[1] = "Inscribir";

                            bloquear_inscribir_en = "Cursado";

                        } else if (tipos_cursos.equals("Lenguas")) {

                            detalle_dialog = "<html><div style='width:300px;'><center><u><b>OPERACION</b></u></center><div></html>\n\n"
                                    + "<html><u><b>Apellido y Nombre</b></u>: " + jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString() + ".</html>\n"
                                    + "<html><u><b>Cursos Inscriptos</b></u>: " + cant_cursos + ".</html>\n"
                                    + "<html><b>Mientras el Alumno esté cursando algo, no se puede Inscribir a otro Taller de Lenguas. Cualquier duda, consultar con <u>administración</u>.</b></html>\n"
                                    + "¿Desea Inscribir a un Cursado?";

                            opciones_dialog = new Object[2];
                            opciones_dialog[0] = "Cancelar";
                            opciones_dialog[1] = "Inscribir";

                            bloquear_inscribir_en = "Lenguas";

                        } else if (tipos_cursos.equals("Cursillo")) {

                            detalle_dialog = "<html><div style='width:300px;'><center><u><b>OPERACION</b></u></center><div></html>\n\n"
                                    + "<html><u><b>Apellido y Nombre</b></u>: " + jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString() + ".</html>\n"
                                    + "<html><u><b>Cursos Inscriptos</b></u>: " + cant_cursos + ".</html>\n"
                                    + "<html><b>Mientras el Alumno esté cursando algo, no se puede Inscribir a otro Taller de Lenguas. Cualquier duda, consultar con <u>administración</u>.</b></html>\n"
                                    + "¿Desea Inscribir a un Cursado?";

                            opciones_dialog = new Object[2];
                            opciones_dialog[0] = "Cancelar";
                            opciones_dialog[1] = "Inscribir";

                            bloquear_inscribir_en = "Cursillo";
                        }

                    } else {

                        detalle_dialog = "<html><div style='width:300px;'><center><u><b>OPERACION</b></u></center><div></html>\n\n"
                                + "<html><u><b>Apellido y Nombre</b></u>: " + jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString() + ".</html>\n"
                                + "<html><u><b>Cursos Inscriptos</b></u>: " + cant_cursos + ".</html>\n"
                                + "<html><b>El Alumno ya está inscripto en todas sus posibilidades para este año.</b></html>\n";

                        opciones_dialog = new Object[1];
                        opciones_dialog[0] = "Cancelar";
                    }
                } else {

                    detalle_dialog = "<html><div style='width:300px;'><center><u><b>OPERACION</b></u></center><div></html>\n\n"
                            + "<html><u><b>Apellido y Nombre</b></u>: " + jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString() + ".</html>\n"
                            + "¿Desea Inscribir al Alumno seleccionado?";

                    opciones_dialog = new Object[2];
                    opciones_dialog[0] = "Cancelar";
                    opciones_dialog[1] = "Inscribir";

                    bloquear_inscribir_en = "ninguno";

                }

                int seleccion = JOptionPane.showOptionDialog(jframe, detalle_dialog, "LinneoAdmin", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones_dialog, "Inscribir");

                if (seleccion == 1) {

                    if (jDesktopPane1.getAllFrames().length != 0) {
                        JInternalFrame frame = jDesktopPane1.getAllFrames()[0];
                        frame.dispose();
                    }

                    AXCAlumnos frame = new AXCAlumnos(cod, bloquear_inscribir_en);
                    frame.setVisible(true);
                    jDesktopPane1.add(frame);
                    try {
                        frame.setMaximum(true);
                    } catch (PropertyVetoException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseDragged
        // TODO add your handling code here:
        if(jTable1.getSelectedRow() != -1 ){
            // COMPROBAR DATOS NULL
        }
    }//GEN-LAST:event_jTable1MouseDragged

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if(jTable1.getSelectedRow() != -1 ){
            String[] cursos = Alumnos.MostrarInscripcion(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());

            if (cursos != null) {
                ModificarBecaCurso dialog = new ModificarBecaCurso(jframe, true, jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
                dialog.showDialog();
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if(jTable1.getSelectedRow() != -1 ){
            String[] cursos = Alumnos.MostrarInscripcion(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());

            if (cursos != null) {
                ModificarCurso dialog = new ModificarCurso(jframe, true, jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
                dialog.showDialog();
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
