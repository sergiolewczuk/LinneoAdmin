/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Pantallas.InternalFrames;

import Clases.Class_editar_tabla;
import Dialogs.OperacionAnular;
import Dialogs.OperacionDetalle;
import Pantallas.Frames.Principal;
import static Pantallas.Frames.Principal.df;
import java.awt.Color;
import java.awt.Component;
import java.awt.KeyEventDispatcher;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.DefaultJasperReportsContext;
import net.sf.jasperreports.engine.JRDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.JRPropertiesUtil;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.engine.export.JRPdfExporter;
import net.sf.jasperreports.engine.export.JRPrintServiceExporter;
import net.sf.jasperreports.engine.export.JRPrintServiceExporterParameter;
import net.sf.jasperreports.export.SimpleExporterInput;
import net.sf.jasperreports.export.SimpleOutputStreamExporterOutput;
import net.sf.jasperreports.export.SimplePdfExporterConfiguration;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import java.util.HashMap;
import java.util.Map;
import java.awt.FileDialog;
import java.math.BigDecimal;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author jason
 */
public class Operaciones extends javax.swing.JInternalFrame {

    JFrame jframe;
    KeyboardFocusManager manager = KeyboardFocusManager.getCurrentKeyboardFocusManager();
    KeyDispatcher key = new KeyDispatcher();
    
    //TECLADO ACCESOS DIRECTOS
    class KeyDispatcher implements KeyEventDispatcher {

        @Override
        public boolean dispatchKeyEvent(KeyEvent e) {
            if (jframe.isActive()) {
                if (e.getID() == KeyEvent.KEY_PRESSED) {
                    if (e.getKeyCode() == 112) {//FI
                        jButton1.doClick();
                    }
                    
                    if (e.getKeyCode() == 113) {//F2
                        jButton2.doClick();
                    }
                    
                    if (e.getKeyCode() == 114) {//F3
                        jButton3.doClick();
                    }
                    
                    if (e.getKeyCode() == 115) {//F4
                        jButton3.doClick();
                    }
                    
                    if (e.getKeyCode() == 115) {//F5
                        jButton3.doClick();
                    }
                }
            }
            return false;
        }
    }
    
    @Override
    public void dispose() {
        manager.removeKeyEventDispatcher(key);
        super.dispose();
    }
    
    /**
     * Creates new form Operaciones
     */
    
    BigDecimal total;
    BigDecimal total_efectivo;
    BigDecimal total_debito;
    BigDecimal total_credito;
    BigDecimal total_cheque;
    
    public Operaciones() {
        initComponents();
        
        //Hijack the keyboard manager
        manager.addKeyEventDispatcher(key);

        jframe = (JFrame) Principal.jDesktopPane1.getTopLevelAncestor();
        
        Object[] datos = Clases.Operaciones.Cargar(jComboBox1);
        this.total = new BigDecimal(datos[1].toString());
        this.total_efectivo = new BigDecimal(datos[2].toString());
        this.total_debito = new BigDecimal(datos[3].toString());
        this.total_credito = new BigDecimal(datos[4].toString());
        this.total_cheque = new BigDecimal(datos[5].toString());

        jLabel1.setText("MONTO TOTAL: " + df.format(total));
        jLabel2.setText("MONTO EFECTIVO: " + df.format(total_efectivo));
        jLabel3.setText("MONTO DÉBITO: " + df.format(total_debito));
        jLabel4.setText("MONTO CRÉDITO: " + df.format(total_credito));
        jLabel7.setText("MONTO CHEQUE: " + df.format(total_cheque));
        
        Class_editar_tabla.main(jTable1, (Object[][])datos[0]);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable() {
            public Component prepareRenderer(TableCellRenderer renderer, int row, int column)
            {
                Component c = super.prepareRenderer(renderer, row, column);

                //  Color row based on a cell value

                if (!isRowSelected(row))
                {
                    c.setBackground(getBackground());
                    int modelRow = convertRowIndexToModel(row);
                    String temp = (String)getModel().getValueAt(modelRow, 10).toString();
                    Color color;
                    if (temp.equals("C")) {
                        color = new Color(255,204,204);
                        c.setBackground(color);
                    } else if (temp.equals("A")) {
                        color = linneoadmin.LinneoAdmin.color1;
                        c.setBackground(color);
                    }
                }

                return c;
            }
        };
        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        setTitle("Operaciones");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "N", "FECHA", "HORA", "Persona ID", "PERSONA", "SECTOR", "COMPROBANTE", "TIPO PAGO", "MONTO TOTAL", "M. ANULACION", "ESTADO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(50);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(50);
            jTable1.getColumnModel().getColumn(1).setMinWidth(80);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(80);
            jTable1.getColumnModel().getColumn(2).setMinWidth(80);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(80);
            jTable1.getColumnModel().getColumn(3).setMinWidth(0);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(0);
            jTable1.getColumnModel().getColumn(3).setMaxWidth(0);
            jTable1.getColumnModel().getColumn(5).setMinWidth(120);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(5).setMaxWidth(120);
            jTable1.getColumnModel().getColumn(6).setMinWidth(120);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(6).setMaxWidth(120);
            jTable1.getColumnModel().getColumn(7).setMinWidth(80);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(7).setMaxWidth(80);
            jTable1.getColumnModel().getColumn(8).setMinWidth(100);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(8).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(10).setMinWidth(0);
            jTable1.getColumnModel().getColumn(10).setPreferredWidth(0);
            jTable1.getColumnModel().getColumn(10).setMaxWidth(0);
        }

        jButton1.setText("VER DETALLE [F1]");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton2.setText("REPORTE [F2]");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("MONTO TOTAL:");

        jButton3.setText("ANULAR OPERACION [F3]");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("CIERRE DEL DIA [F4]");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel2.setText("MONTO EFECTIVO:");

        jLabel4.setText("MONTO CRÉDITO:");

        jLabel3.setText("MONTO DÉBITO:");

        jLabel5.setBackground(new java.awt.Color(204, 255, 204));
        jLabel5.setText("OPERACIONES ABIERTAS");
        jLabel5.setOpaque(true);

        jLabel6.setBackground(new java.awt.Color(255, 204, 204));
        jLabel6.setText("OPERACIONES CERRADAS");
        jLabel6.setOpaque(true);

        jLabel7.setText("MONTO CHEQUE:");

        jButton5.setText("REIMPRIMIR [F5]");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 281, Short.MAX_VALUE)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(45, 45, 45)
                                .addComponent(jLabel3)
                                .addGap(45, 45, 45)
                                .addComponent(jLabel4)
                                .addGap(45, 45, 45)
                                .addComponent(jLabel7)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (jTable1.getSelectedRow() != -1) {
            String id = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
            OperacionDetalle dialog = new OperacionDetalle(jframe, true, id);
            dialog.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(jframe, "Debe Seleccionar una Operación", "LinneoAdmin", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            jButton1.doClick();
        }
    }//GEN-LAST:event_jTable1MousePressed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        if (this.isVisible()) {
            Object[] datos = Clases.Operaciones.Cargar(jComboBox1.getSelectedItem().toString());
            this.total = new BigDecimal(datos[1].toString());
            this.total_efectivo = new BigDecimal(datos[2].toString());
            this.total_debito = new BigDecimal(datos[3].toString());
            this.total_credito = new BigDecimal(datos[4].toString());
            this.total_cheque = new BigDecimal(datos[5].toString());

            jLabel1.setText("MONTO TOTAL: " + df.format(total));
            jLabel2.setText("MONTO EFECTIVO: " + df.format(total_efectivo));
            jLabel3.setText("MONTO DÉBITO: " + df.format(total_debito));
            jLabel4.setText("MONTO CRÉDITO: " + df.format(total_credito));
            jLabel7.setText("MONTO CHEQUE: " + df.format(total_cheque));

            Class_editar_tabla.main(jTable1, (Object[][]) datos[0]);
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (!jComboBox1.getSelectedItem().toString().equals("TODAS")) {
            DefaultJasperReportsContext context = DefaultJasperReportsContext.getInstance();
            JRPropertiesUtil.getInstance(context).setProperty("net.sf.jasperreports.xpath.executer.factory",
                    "net.sf.jasperreports.engine.util.xml.JaxenXPathExecuterFactory");

            int seleccion = JOptionPane.showOptionDialog(jframe, "¿Que desea hacer?", "LinneoAdmin", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Imprimir", "Guardar como PDF", "Cancelar"}, "Imprimir");

            if (seleccion == 0) {
                /* Array para almacenar las impresoras del sistema */
                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0) {//si existen impresoras
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Eliga impresora:",
                            "Imprimir Reporte", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {
                            JasperPrint print;
                            //se carga el reporte
                            Map params = new HashMap();
                            params.put("fecha", jComboBox1.getSelectedItem().toString());
                            params.put("monto_total", df.format(this.total));
                            params.put("monto_efectivo", df.format(this.total_efectivo));
                            params.put("monto_debito", df.format(this.total_debito));
                            params.put("monto_credito", df.format(this.total_credito));

                            print = JasperFillManager.fillReport("Reportes/operaciones.jasper", params, linneoadmin.LinneoAdmin.conexion);
                            //se manda a la impresora
                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();
                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            jrprintServiceExporter.exportReport();
                        } catch (JRException ex) {
                            System.err.println("Error JRException: " + ex.getMessage());
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(jframe, "No se encontró ninguna Impresora", "LinneoAdmin", JOptionPane.INFORMATION_MESSAGE);
                }
            } else if (seleccion == 1) {
                FileDialog fd = new FileDialog(new JDialog(), "Guardar Operaciones", 1);
                fd.setFile("Libro Operaciones");
                fd.setVisible(true);

                if (fd.getDirectory() != null && fd.getFile() != null) {
                    JasperPrint print;
                    try {
                        Map params = new HashMap();
                        params.put("fecha", jComboBox1.getSelectedItem().toString());
                        params.put("monto_total", df.format(this.total));
                        params.put("monto_efectivo", df.format(this.total_efectivo));
                        params.put("monto_debito", df.format(this.total_debito));
                        params.put("monto_credito", df.format(this.total_credito));

                        print = JasperFillManager.fillReport("Reportes/operaciones.jasper", params, linneoadmin.LinneoAdmin.conexion);

                        JRPdfExporter exporter = new JRPdfExporter();

                        exporter.setExporterInput(new SimpleExporterInput(print));
                        exporter.setExporterOutput(new SimpleOutputStreamExporterOutput(fd.getDirectory() + fd.getFile() + ".pdf"));
                        SimplePdfExporterConfiguration configuration = new SimplePdfExporterConfiguration();
                        exporter.setConfiguration(configuration);

                        exporter.exportReport();

                        JOptionPane.showMessageDialog(jframe, "Guardado Correctamente", "LinneoAdmin", JOptionPane.INFORMATION_MESSAGE);

                    } catch (JRException ex) {
                        Logger.getLogger(BalanceComprobacion.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } /*else if (seleccion == 2) {
             FileDialog fd = new FileDialog(new JDialog(), "Guardar Libro Diario", 1);
             fd.setFile("Libro Diario");
             fd.setVisible(true);

             if (periodo.equals("")) {
             periodo = "Ejercicio Actual";
             }

             if (fd.getDirectory() != null && fd.getFile() != null) {
             try {
             Excel(jTable1, fd.getDirectory() + fd.getFile() + ".xlsx", periodo, jComboBox1.getSelectedItem().toString());
             JOptionPane.showMessageDialog(jframe, "Guardado Correctamente", "LinneoAdmin", JOptionPane.INFORMATION_MESSAGE);
             } catch (IOException ex) {
             Logger.getLogger(Diario.class.getName()).log(Level.SEVERE, null, ex);
             }
             }
             }*/
        } else {
            JOptionPane.showMessageDialog(jframe, "No puede Generar un Reporte de Operaciones de TODAS las fechas.", "LinneoAdmin", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (jTable1.getSelectedRow() != -1) {
            Object motivo_tabla = jTable1.getValueAt(jTable1.getSelectedRow(), 9);
            if (motivo_tabla == null) {
                String persona = jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString();
                String persona_nombre = jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString();
                String sector = jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString();
                String id = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
                
                boolean permitido = false;
                
                if (sector.equals("Socios")) {
                    permitido = Clases.Operaciones.PermisoAnularSocio(persona, sector, id);
                } else {
                    permitido = true;
                }
                
                if (permitido) {
                    OperacionAnular pantalla = new OperacionAnular(jframe,true, id);
                    Object motivo = pantalla.showDialog();
                    jTable1.setValueAt(motivo, jTable1.getSelectedRow(), 9);
                } else {
                    JOptionPane.showMessageDialog(jframe, "Solo puede anular la última operación Abierta realizada del Sector "+sector+" para "+persona_nombre+".", "LinneoAdmin", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(jframe, "No puede volver a Anular esta Operación", "LinneoAdmin", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(jframe, "Por favor Seleccione una Operación", "LinneoAdmin", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (jComboBox1.getSelectedItem().toString().equals("TODAS")) {
            JOptionPane.showMessageDialog(jframe, "No puede realizar el cierre de Operaciones de TODAS las fechas.", "LinneoAdmin", JOptionPane.INFORMATION_MESSAGE);
        } else {
            Clases.Operaciones.CierreOperaciones(jComboBox1.getSelectedItem().toString());
            
            Object[] datos = Clases.Operaciones.Cargar(jComboBox1.getSelectedItem().toString());
            this.total = new BigDecimal(datos[1].toString());
            this.total_efectivo = new BigDecimal(datos[2].toString());
            this.total_debito = new BigDecimal(datos[3].toString());
            this.total_credito = new BigDecimal(datos[4].toString());
            this.total_cheque = new BigDecimal(datos[5].toString());

            jLabel1.setText("MONTO TOTAL: " + df.format(total));
            jLabel2.setText("MONTO EFECTIVO: " + df.format(total_efectivo));
            jLabel3.setText("MONTO DÉBITO: " + df.format(total_debito));
            jLabel4.setText("MONTO CRÉDITO: " + df.format(total_credito));
            jLabel7.setText("MONTO CHEQUE: " + df.format(total_cheque));

            Class_editar_tabla.main(jTable1, (Object[][]) datos[0]);
            
            JOptionPane.showMessageDialog(jframe, "Cierre de la fecha realizado.", "LinneoAdmin", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (!jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString().equals("")) {
            if (jTable1.getSelectedRow() != -1) {

                String id = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
                String sector = jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString();
                String info = "";

                if (sector.equals("Institucional")) {
                    String[] alumno = Clases.Cuotas.EncontroAlumnoCuotas(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
                    info = alumno[2];
                }
                if (sector.equals("Alquileres")) {
                    String[] alquiler = Clases.Cuotas.EncontroAlquileresCuotas(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
                    info = alquiler[0];
                }
                if (sector.equals("Socios")) {
                    String[] socio = Clases.Cuotas.EncontroAlumnoCuotas(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
                    info = socio[2];
                }
                if (sector.equals("Cementerio")) {
                //String[] cementerio = Clases.Cuotas.EncontroResponsableCuotas(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
                    //info = cementerio[2];
                }

                // SABER SI ES CUOTA O NO
                String tipo_operacion = Clases.Cuotas.ComprobarOperacion(Integer.valueOf(id));
                
                //  FRAME - SECTOR - TIPO OPERACION - NUMERO OPERACION
                Clases.Recibo.Imprimir(jframe, sector, tipo_operacion, Integer.valueOf(id), info);

            } else {
                JOptionPane.showMessageDialog(jframe, "Por favor Seleccione una Operación.", "LinneoAdmin", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(jframe, "Solo se puede REIMPRIMIR una operación que posea N° Recibo.", "LinneoAdmin", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
