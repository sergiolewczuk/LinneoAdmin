/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Pantallas.InternalFrames;

import Dialogs.SeleccionarCuenta;
import Pantallas.Frames.Principal;
import static Pantallas.Frames.Principal.jDesktopPane1;
import java.awt.KeyEventDispatcher;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.beans.PropertyVetoException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


public class TiposPagos extends javax.swing.JInternalFrame {

    @Override
    public void dispose() {
        int seleccion = JOptionPane.showOptionDialog(jframe, "Está a punto de salir. Los datos no guardados se perderán\n¿Desea Continuar?", "LinneoAdmin", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Salir", "Cancelar"}, "Salir");
        if (seleccion == 0) {
            manager.removeKeyEventDispatcher(key);
            super.dispose();
        }
    }
    
    Clases.TiposPagos tipos_pagos = new Clases.TiposPagos();
    Clases.Cuentas cuenta = new Clases.Cuentas();
    
    JFrame jframe;
    KeyboardFocusManager manager = KeyboardFocusManager.getCurrentKeyboardFocusManager();
    KeyDispatcher key = new KeyDispatcher();
    
    //TECLADO ACCESOS DIRECTOS
    class KeyDispatcher implements KeyEventDispatcher {

        @Override
        public boolean dispatchKeyEvent(KeyEvent e) {
            if (jframe.isActive()) {
                if (e.getID() == KeyEvent.KEY_PRESSED) {
                    if (e.getKeyCode() == 112) {
                        jButton1.doClick();
                    }
                    if (e.getKeyCode() == 113) {
                        
                    }                    
                }
            }
            return false;
        }
    }
    
    void cargar_cuentas(){
        
        Object[] info = tipos_pagos.cargar_cuentas();
        
        if(info[0]!=null){// EFECTIVO
            efect.setText(info[0].toString());
        }
        if(info[1]!=null){// DEBITO
            deb.setText(info[1].toString());
        }
        if(info[2]!=null){// CREDITO
            cred.setText(info[2].toString());
        }
        if(info[3]!=null){// CHEQUE
            cheq.setText(info[3].toString());
        }
        if(info[4]!=null){// TRANF. BANCARIA
            tranf.setText(info[4].toString());
        }
        if(info[5]!=null){// DEPO. BANCARIO
            depo.setText(info[5].toString());
        }
        
    }
    
    public TiposPagos() {
        initComponents();
        
        
        cargar_cuentas();
        
        //Hijack the keyboard manager
        manager.addKeyEventDispatcher(key);
        jframe = (JFrame) Principal.jDesktopPane1.getTopLevelAncestor();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        efect = new javax.swing.JTextField();
        deb = new javax.swing.JTextField();
        cred = new javax.swing.JTextField();
        cheq = new javax.swing.JTextField();
        tranf = new javax.swing.JTextField();
        depo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setIconifiable(true);
        setTitle("Configuraciones Generales");

        jLabel1.setText("Efectivo");

        jLabel2.setText("Débito");

        jLabel3.setText("Crédito");

        jLabel4.setText("Cheque");

        jLabel5.setText("Tranf. Bancaria");

        jLabel6.setText("Depo. Bancario");

        efect.setName("numeros"); // NOI18N
        efect.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                efectKeyPressed(evt);
            }
        });

        deb.setName("numeros"); // NOI18N
        deb.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                debKeyPressed(evt);
            }
        });

        cred.setName("numeros"); // NOI18N
        cred.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                credKeyPressed(evt);
            }
        });

        cheq.setName("numeros"); // NOI18N
        cheq.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cheqKeyPressed(evt);
            }
        });

        tranf.setName("numeros"); // NOI18N
        tranf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tranfKeyPressed(evt);
            }
        });

        depo.setName("numeros"); // NOI18N
        depo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                depoKeyPressed(evt);
            }
        });

        jLabel7.setText("Configuración de Tipos de Pagos");

        jButton1.setText("GUARDAR [F1]");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NOMBRE", "SECTOR", "NUM. CUENTA", "CUENTA", "FUNCION", "ESTADO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(2).setMinWidth(90);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(90);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(90);
            jTable1.getColumnModel().getColumn(4).setMinWidth(120);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(4).setMaxWidth(120);
        }

        jLabel8.setText("Configuración de Tipos de Operaciones de Entrada y Salida");

        jButton2.setText("NUEVO [F2]");

        jButton3.setText("MODIFICAR [F3]");

        jButton4.setText("DAR DE BAJA [F4]");

        jButton5.setText("DAR DE ALTA [F5]");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 213, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(efect, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deb, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cred, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tranf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(depo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cheq, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(55, 55, 55)
                        .addComponent(jButton1)
                        .addGap(0, 246, Short.MAX_VALUE))
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(efect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(deb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cred, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cheq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(tranf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(depo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(40, 40, 40)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addContainerGap(162, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        Boolean correcto = false;
        
        // BUSCAR SI ENCUENTRAN TODAS LAS CUENTAS PUESTAS EN LOS TEXT
        if (!efect.getText().isEmpty()) {
            // SI ENCONTRO LA CUENTA O NO
            Boolean encontro = cuenta.ComprobarExistente(efect.getText());

            if (encontro == false) {
                JOptionPane.showMessageDialog(Principal.jDesktopPane1.getSelectedFrame(), "La cuenta de Efectivo no existe, por favor corrija.", "LinneoAdmin", JOptionPane.WARNING_MESSAGE);
                efect.setText("");
                efect.requestFocus();
            } else {
                correcto = true;
            }
        }
        if (!deb.getText().isEmpty()) {
            // SI ENCONTRO LA CUENTA O NO
            Boolean encontro = cuenta.ComprobarExistente(deb.getText());

            if (encontro == false) {
                JOptionPane.showMessageDialog(Principal.jDesktopPane1.getSelectedFrame(), "La cuenta de Débito no existe, por favor corrija.", "LinneoAdmin", JOptionPane.WARNING_MESSAGE);
                deb.setText("");
                deb.requestFocus();
            } else {
                correcto = true;
            }
        }
        if (!cred.getText().isEmpty()) {
            // SI ENCONTRO LA CUENTA O NO
            Boolean encontro = cuenta.ComprobarExistente(cred.getText());

            if (encontro == false) {
                JOptionPane.showMessageDialog(Principal.jDesktopPane1.getSelectedFrame(), "La cuenta de Crédito no existe, por favor corrija.", "LinneoAdmin", JOptionPane.WARNING_MESSAGE);
                cred.setText("");
                cred.requestFocus();
            } else {
                correcto = true;
            }
        }
        if (!cheq.getText().isEmpty()) {
            // SI ENCONTRO LA CUENTA O NO
            Boolean encontro = cuenta.ComprobarExistente(cheq.getText());

            if (encontro == false) {
                JOptionPane.showMessageDialog(Principal.jDesktopPane1.getSelectedFrame(), "La cuenta de Cheque no existe, por favor corrija.", "LinneoAdmin", JOptionPane.WARNING_MESSAGE);
                cheq.setText("");
                cheq.requestFocus();
            } else {
                correcto = true;
            }
        }
        if (!tranf.getText().isEmpty()) {
            // SI ENCONTRO LA CUENTA O NO
            Boolean encontro = cuenta.ComprobarExistente(tranf.getText());

            if (encontro == false) {
                JOptionPane.showMessageDialog(Principal.jDesktopPane1.getSelectedFrame(), "La cuenta de Tranf. Bancaria no existe, por favor corrija.", "LinneoAdmin", JOptionPane.WARNING_MESSAGE);
                tranf.setText("");
                tranf.requestFocus();
            } else {
                correcto = true;
            }
        }
        if (!depo.getText().isEmpty()) {
            // SI ENCONTRO LA CUENTA O NO
            Boolean encontro = cuenta.ComprobarExistente(depo.getText());

            if (encontro == false) {
                JOptionPane.showMessageDialog(Principal.jDesktopPane1.getSelectedFrame(), "La cuenta de Depo. Bancario no existe, por favor corrija.", "LinneoAdmin", JOptionPane.WARNING_MESSAGE);
                depo.setText("");
                depo.requestFocus();
            } else {
                correcto = true;
            }
        }

        if (correcto) {
            
            // UPDATE O INSERT   -> EFECTIVO, DEBITO, CREDITO, CHEQUE, TRANF. BANCARIA, DEPO. BANCARIO
            // COMPROBAR SI YA HAY UN INSERT, SI HAY HACER UPDATE
            if(Clases.TiposPagos.ComprobarExistente("Efectivo")){
                tipos_pagos.Update("Efectivo", efect.getText());
            } else if (!Clases.TiposPagos.ComprobarExistente("Efectivo")) {
                tipos_pagos.Insert("Efectivo", efect.getText());
            }
            
            if(Clases.TiposPagos.ComprobarExistente("Débito")){
                tipos_pagos.Update("Débito", deb.getText());
            } else if (!Clases.TiposPagos.ComprobarExistente("Débito")) {
                tipos_pagos.Insert("Débito", deb.getText());
            }
            
            if(Clases.TiposPagos.ComprobarExistente("Crédito")){
                tipos_pagos.Update("Crédito", cred.getText());
            } else if (!Clases.TiposPagos.ComprobarExistente("Crédito")) {
                tipos_pagos.Insert("Crédito", cred.getText());
            }
            
            if(Clases.TiposPagos.ComprobarExistente("Cheque")){
                tipos_pagos.Update("Cheque", cheq.getText());
            } else if (!Clases.TiposPagos.ComprobarExistente("Cheque")) {
                tipos_pagos.Insert("Cheque", cheq.getText());
            }
            
            if(Clases.TiposPagos.ComprobarExistente("Tranf. Bancaria")){
                tipos_pagos.Update("Tranf. Bancaria", tranf.getText());
            } else if (!Clases.TiposPagos.ComprobarExistente("Tranf. Bancaria")) {
                tipos_pagos.Insert("Tranf. Bancaria", tranf.getText());
            }
            
            if(Clases.TiposPagos.ComprobarExistente("Depo. Bancario")){
                tipos_pagos.Update("Depo. Bancario", depo.getText());
            } else if (!Clases.TiposPagos.ComprobarExistente("Depo. Bancario")) {
                tipos_pagos.Insert("Depo. Bancario", depo.getText());
            }
            
            JOptionPane.showMessageDialog(Principal.jDesktopPane1.getSelectedFrame(), "Cambios Guardados correctamente!", "LinneoAdmin", JOptionPane.INFORMATION_MESSAGE);
            
        }else{
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void efectKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_efectKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            
            String num_cuenta = efect.getText();

            // SI ENCONTRO LA CUENTA O NO
            Boolean encontro = cuenta.ComprobarExistente(num_cuenta);

            if (encontro == false) {
                SeleccionarCuenta dialog = new SeleccionarCuenta(jframe, true);
                String num = dialog.showDialog();

                if (num != null) {
                    efect.setText(num);
                } else {
                    evt.consume();
                }
            }
        }
    }//GEN-LAST:event_efectKeyPressed

    private void debKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_debKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            
            String num_cuenta = deb.getText();

            // SI ENCONTRO LA CUENTA O NO
            Boolean encontro = cuenta.ComprobarExistente(num_cuenta);

            if (encontro == false) {
                SeleccionarCuenta dialog = new SeleccionarCuenta(jframe, true);
                String num = dialog.showDialog();

                if (num != null) {
                    deb.setText(num);
                } else {
                    evt.consume();
                }
            }
        }
    }//GEN-LAST:event_debKeyPressed

    private void credKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_credKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            
            String num_cuenta = cred.getText();

            // SI ENCONTRO LA CUENTA O NO
            Boolean encontro = cuenta.ComprobarExistente(num_cuenta);

            if (encontro == false) {
                SeleccionarCuenta dialog = new SeleccionarCuenta(jframe, true);
                String num = dialog.showDialog();

                if (num != null) {
                    cred.setText(num);
                } else {
                    evt.consume();
                }
            }
        }
    }//GEN-LAST:event_credKeyPressed

    private void cheqKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cheqKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            
            String num_cuenta = cheq.getText();

            // SI ENCONTRO LA CUENTA O NO
            Boolean encontro = cuenta.ComprobarExistente(num_cuenta);

            if (encontro == false) {
                SeleccionarCuenta dialog = new SeleccionarCuenta(jframe, true);
                String num = dialog.showDialog();

                if (num != null) {
                    cheq.setText(num);
                } else {
                    evt.consume();
                }
            }
        }
    }//GEN-LAST:event_cheqKeyPressed

    private void tranfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tranfKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            
            String num_cuenta = tranf.getText();

            // SI ENCONTRO LA CUENTA O NO
            Boolean encontro = cuenta.ComprobarExistente(num_cuenta);

            if (encontro == false) {
                SeleccionarCuenta dialog = new SeleccionarCuenta(jframe, true);
                String num = dialog.showDialog();

                if (num != null) {
                    tranf.setText(num);
                } else {
                    evt.consume();
                }
            }
        }
    }//GEN-LAST:event_tranfKeyPressed

    private void depoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_depoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            
            String num_cuenta = depo.getText();

            // SI ENCONTRO LA CUENTA O NO
            Boolean encontro = cuenta.ComprobarExistente(num_cuenta);

            if (encontro == false) {
                SeleccionarCuenta dialog = new SeleccionarCuenta(jframe, true);
                String num = dialog.showDialog();

                if (num != null) {
                    depo.setText(num);
                } else {
                    evt.consume();
                }
            }
        }
    }//GEN-LAST:event_depoKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cheq;
    private javax.swing.JTextField cred;
    private javax.swing.JTextField deb;
    private javax.swing.JTextField depo;
    private javax.swing.JTextField efect;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField tranf;
    // End of variables declaration//GEN-END:variables
}
